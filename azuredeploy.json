{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "prefix": {
      "type": "string",
      "minLength": 2,
      "maxLength": 9,
      "metadata": {
        "description": "The prefix name of machines. "
      }
    },
    "adminUsername": {
      "type": "string",
      "minLength": 2,
      "maxLength": 10,
      "metadata": {
        "description": "The name of the administrator account of the new VM. The domain name is contoso.com "
      }
    },
    "adminPassword": {
      "type": "securestring",
      "minLength": 8,
      "metadata": {
        "description": "Input must meet password complexity requirements as documented for property 'adminPassword' in https://docs.microsoft.com/en-us/rest/api/compute/virtualmachines/virtualmachines-create-or-update"
      }
    },
	"IntrPackage": {
      "type": "string",
      "minLength": 8,
      "metadata": {
        "description": "URL to download InTrust"
      }
    },
	"IntrUpdate": {
      "type": "string",
      "minLength": 8,
      "metadata": {
        "description": "URL to download InTrust Update"
      }
    },
	"IntrLic": {
      "type": "string",
      "minLength": 8,
      "metadata": {
        "description": "URL to download InTrust license"
      }
    },
	"GPOURL": {
      "type": "string",
      "minLength": 8,
      "metadata": {
        "description": "URL to download and deploy GPO in domain"
      }
    },
    "ITSSURL": {
      "type": "string",
      "minLength": 8,
      "metadata": {
        "description": "URL to download ITSS"
      }
    },
    "ITSSUpdateURL": {
      "type": "string",
      "minLength": 8,
      "metadata": {
        "description": "URL to download ITSS Update"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located including a trailing '/'"
      },
      "defaultValue": "https://github.com/sergey-goncharenko/azure-quickstart-templates/raw/master/quest-intrust-lab/"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured. "
      },
      "defaultValue": ""
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "dscScript": "DSC/DCConfiguration.zip",
    "virtualNetworkName": "[concat(toLower(parameters('prefix')), '-vnet')]",
    "domainName": "intrust.local",
    "networkSettings": {
      "virtualNetworkAddressPrefix": "10.0.0.0/16",
      "subnetAddressPrefix": "10.0.0.0/24",
      "virtualMachinesIPAddress": "10.0.0.",
      "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), 'default')]",
      "privateIPAllocationMethod": "Static",
      "publicIpAllocationMethod": "Dynamic"
    },
    "securityGroupRule": [{
      "name": "default-allow-rdp",
      "priority": 1000,
      "sourceAddressPrefix": "*",
      "protocol": "Tcp",
      "destinationPortRange": "3389",
      "access": "Allow",
      "direction": "Inbound",
      "sourcePortRange": "*",
      "destinationAddressPrefix": "*"
    },
	 {
      "name": "default-allow-InTrust",
      "priority": 1100,
      "sourceAddressPrefix": "*",
      "protocol": "Tcp",
      "destinationPortRange": "900",
      "access": "Allow",
      "direction": "Inbound",
      "sourcePortRange": "*",
      "destinationAddressPrefix": "*"
    }],
    "vmrole": [
      "INTR"
    ],
    "vmname": [
      "INTR01"
      ],
    "vmDiskType": [
      "Premium_LRS"
    ],
    "vmSize": [
      "Standard_B2ms"
    ],
    "imageReference": {
      "INTR": {
        "publisher": "MicrosoftSQLServer",
        "offer": "SQL2017-WS2016",
        "sku": "Standard",
        "version": "latest"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2018-06-01",
      "name": "[concat(toLower(parameters('prefix')),variables('vmname')[0],'/WorkFlow')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/',toLower(parameters('prefix')),variables('vmname')[0])]"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.21",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "modulesUrl": "[Uri(parameters('_artifactsLocation'),concat(variables('dscScript'),parameters('_artifactsLocationSasToken')))]",
          "configurationFunction": "[concat(variables('vmrole')[0],'Configuration.ps1\\Configuration')]",
          "Properties": {
            "DomainName": "[concat(parameters('prefix'),variables('vmname')[0])]",
            "DCName": "[concat(parameters('prefix'),variables('vmname')[0])]",
            "INTRName": "[concat(parameters('prefix'),variables('vmname')[0])]",
            "ClientName": "[concat(parameters('prefix'),variables('vmname')[0])]",
            "PSName": "[concat(parameters('prefix'),variables('vmname')[0])]",
			"IntrUrl": "[parameters('IntrPackage')]",
			"IntrUpdateUrl": "[parameters('IntrUpdate')]",
			"IntrLicUrl": "[parameters('IntrLic')]",
			"GPOURL": "[parameters('GPOURL')]",
            "ITSSURL": "[parameters('ITSSURL')]",
            "ITSSUpdateURL": "[parameters('ITSSUpdateURL')]",
            "DNSIPAddress": "[concat(variables('networkSettings').virtualMachinesIPAddress,add(int('0'),int('4')))]",
            "AdminCreds": {
              "UserName": "[parameters('adminUsername')]",
              "Password": "PrivateSettingsRef:AdminPassword"
            }
          }
        },
        "protectedSettings": {
          "Items": {
            "AdminPassword": "[parameters('adminPassword')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2018-08-01",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('networkSettings').virtualNetworkAddressPrefix]"
          ]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "[variables('networkSettings').subnetAddressPrefix]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(toLower(parameters('prefix')),toLower(variables('vmname')[0]), '-ni')]",
      "apiVersion": "2018-08-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/publicIpAddresses/',toLower(parameters('prefix')),toLower(variables('vmname')[0]), '-ip')]",
        "[concat('Microsoft.Network/networkSecurityGroups/', toLower(toLower(parameters('prefix'))), '-nsg')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('networkSettings').subnetRef]"
              },
              "privateIPAllocationMethod": "[variables('networkSettings').privateIPAllocationMethod]",
              "privateIPAddress": "[concat(variables('networkSettings').virtualMachinesIPAddress,add(int('0'),int('4')))]",
              "publicIpAddress": {
                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', concat(toLower(parameters('prefix')),toLower(variables('vmname')[0]), '-ip'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', concat(toLower(parameters('prefix')), '-nsg'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2018-08-01",
      "name": "[concat(toLower(parameters('prefix')),toLower(variables('vmname')[0]), '-ip')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIpAllocationMethod": "[variables('networkSettings').publicIpAllocationMethod]"
      }
    },

    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-06-01",
      "name": "[concat(toLower(parameters('prefix')),toLower(variables('vmname')[0]))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/',toLower(parameters('prefix')),toLower(variables('vmname')[0]), '-ni')]"
      ],
      "properties": {
        "osProfile": {
          "computerName": "[concat(toLower(parameters('prefix')),toLower(variables('vmname')[0]))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true"
          }
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')[0]]"
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')[variables('vmrole')[0]]]",
          "osDisk": {
            "name": "[concat(toLower(parameters('prefix')),toLower(variables('vmname')[0]),'-OsDisk')]",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[variables('vmDiskType')[0]]"
            }
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(toLower(parameters('prefix')),toLower(variables('vmname')[0]), '-ni'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": false
          }
        }
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2018-08-01",
      "name": "[concat(toLower(parameters('prefix')), '-nsg')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "[variables('securityGroupRule').name]",
            "properties": {
              "priority": "[variables('securityGroupRule').priority]",
              "sourceAddressPrefix": "[variables('securityGroupRule').sourceAddressPrefix]",
              "protocol": "[variables('securityGroupRule').protocol]",
              "destinationPortRange": "[variables('securityGroupRule').destinationPortRange]",
              "access": "[variables('securityGroupRule').access]",
              "direction": "[variables('securityGroupRule').direction]",
              "sourcePortRange": "[variables('securityGroupRule').sourcePortRange]",
              "destinationAddressPrefix": "[variables('securityGroupRule').destinationAddressPrefix]"
            }
          }
        ]
      }
    }
    
  ],
  "outputs": {

  }
}

